#!/usr/bin/env bash

export CONFIG=$1
source $1

NAME="$(date +%Y-%m-%dT%H:%M)"
WORKING_DIR=$(pwd)
BACKUP_TMP_DIR="$SOURCE/.backup_$NAME"
mkdir "$BACKUP_TMP_DIR"

try_mount() {
    if [ $MOUNT_REPOSITORY -eq 1 ]; then
        mountpoint -q $REPOSITORY
        if [ $? -eq 0 ]; then
            echo '=> Repository is already mounted'
        else
            echo '=> Mounting repository'
            mount $REPOSITORY
            if [ $? -ne 0 ]; then
                echo "=> ERROR while mounting repository, exit value = $?" >&2
                exit 1
            fi
        fi
    fi
}

try_umount() {
    if [ $MOUNT_REPOSITORY -eq 1 ]; then
        echo '=> Unmounting repository'
        umount $REPOSITORY
        if [ $? -ne 0 ]; then
            echo "=> ERROR while unmounting repository, exit value = $?" >&2
        fi
    fi
}

if [[ -n $BACKUP_PRE_HOOK ]]; then
    cd "$BACKUP_TMP_DIR"
    echo '=> Running pre-hook'
    exec $BACKUP_PRE_HOOK
    cd "$WORKING_DIR"
fi

try_mount

echo "=> Creating backup $NAME"
export BORG_REPO="$REPOSITORY"
export BORG_PASSCOMMAND="cat $PASSPHRASE_FILE"
borg create --stats                             \
    --exclude-from "$EXCLUDE_FILE"              \
    "::$NAME"                                   \
    "$SOURCE"
CREATE_STATUSCODE=$?

if [ $CREATE_STATUSCODE -ne 0 ]; then
    echo "=> ERROR or WARNING while creating new archive $NAME, exit code = $CREATE_STATUSCODE" >&2
fi

echo '=> Pruning old backups'
borg prune --stats --keep-daily=$KEEP_DAILY --keep-weekly=$KEEP_WEEKLY --keep-monthly=$KEEP_MONTHLY
PRUNE_STATUSCODE=$?

if [ $PRUNE_STATUSCODE -ne 0 ]; then
    echo "=> ERROR or WARNING while pruning old archives, exit code = $PRUNE_STATUSCODE" >&2
fi

if [[ -n $BACKUP_HOOK ]]; then
    if [[ $CREATE_STATUSCODE -le 1 && $PRUNE_STATUSCODE -le 1 ]]; then
        echo '=> Running hook'
        exec $BACKUP_HOOK
    else
        echo '=> Skipping hook because of errors during backup'
    fi
fi

rm -rf "$BACKUP_TMP_DIR"
try_umount
echo '=> Finished Backup'

if [[ $CREATE_STATUSCODE -ne 0 || $PRUNE_STATUSCODE -ne 0 ]]; then
    exit 1
fi
exit 0